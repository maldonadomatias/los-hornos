{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/admin/components/Calculator.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointTarget = ReactPoint.PointTarget;\n\nclass AutoScalingText extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      scale: 1\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      scale\n    } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({\n        scale: actualScale\n      });\n    } else if (scale < 1) {\n      this.setState({\n        scale: 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      scale\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-scaling-text\",\n      style: {\n        transform: `scale(${scale},${scale})`\n      },\n      ref: node => this.node = node,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const {\n      value,\n      ...props\n    } = this.props;\n    const language = navigator.language || \"en-US\";\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }); // Add back missing .0 in e.g. 12.0\n\n    const match = value.match(/\\.\\d*?(0*)$/);\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n      className: \"calculator-display\",\n      children: /*#__PURE__*/_jsxDEV(AutoScalingText, {\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CalculatorKey extends React.Component {\n  render() {\n    const {\n      onPress,\n      className,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(PointTarget, {\n      onPoint: onPress,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `calculator-key ${className}`,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst CalculatorOperations = {\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\n  \"=\": (prevValue, nextValue) => nextValue\n};\n\nclass Calculator extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: null,\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false\n    };\n\n    this.handleKeyDown = event => {\n      let {\n        key\n      } = event;\n      if (key === \"Enter\") key = \"=\";\n\n      if (/\\d/.test(key)) {\n        event.preventDefault();\n        this.inputDigit(parseInt(key, 10));\n      } else if (key in CalculatorOperations) {\n        event.preventDefault();\n        this.performOperation(key);\n      } else if (key === \".\") {\n        event.preventDefault();\n        this.inputDot();\n      } else if (key === \"%\") {\n        event.preventDefault();\n        this.inputPercent();\n      } else if (key === \"Backspace\") {\n        event.preventDefault();\n        this.clearLastChar();\n      } else if (key === \"Clear\") {\n        event.preventDefault();\n\n        if (this.state.displayValue !== \"0\") {\n          this.clearDisplay();\n        } else {\n          this.clearAll();\n        }\n      }\n    };\n  }\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: \"0\"\n    });\n  }\n\n  clearLastChar() {\n    const {\n      displayValue\n    } = this.state;\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\"\n    });\n  }\n\n  toggleSign() {\n    const {\n      displayValue\n    } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n    this.setState({\n      displayValue: String(newValue)\n    });\n  }\n\n  inputPercent() {\n    const {\n      displayValue\n    } = this.state;\n    const currentValue = parseFloat(displayValue);\n    if (currentValue === 0) return;\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\n    const newValue = parseFloat(displayValue) / 100;\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    });\n  }\n\n  inputDot() {\n    const {\n      displayValue\n    } = this.state;\n\n    if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + \".\",\n        waitingForOperand: false\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const {\n      displayValue,\n      waitingForOperand\n    } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      });\n    } else {\n      this.setState({\n        displayValue: displayValue === \"0\" ? String(digit) : displayValue + digit\n      });\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator\n    } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      });\n    } else if (operator) {\n      const currentValue = value || 0;\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const {\n      displayValue\n    } = this.state;\n    const clearDisplay = displayValue !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(CalculatorDisplay, {\n        value: displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-keypad\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-keys\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"function-keys\",\n            children: [/*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-clear\",\n              onPress: () => clearDisplay ? this.clearDisplay() : this.clearAll(),\n              children: clearText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-sign\",\n              onPress: () => this.toggleSign(),\n              children: \"\\xB1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-percent\",\n              onPress: () => this.inputPercent(),\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit-keys\",\n            children: [/*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-0\",\n              onPress: () => this.inputDigit(0),\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-dot\",\n              onPress: () => this.inputDot(),\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-1\",\n              onPress: () => this.inputDigit(1),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-2\",\n              onPress: () => this.inputDigit(2),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-3\",\n              onPress: () => this.inputDigit(3),\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-4\",\n              onPress: () => this.inputDigit(4),\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-5\",\n              onPress: () => this.inputDigit(5),\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-6\",\n              onPress: () => this.inputDigit(6),\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-7\",\n              onPress: () => this.inputDigit(7),\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-8\",\n              onPress: () => this.inputDigit(8),\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-9\",\n              onPress: () => this.inputDigit(9),\n              children: \"9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operator-keys\",\n          children: [/*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-divide\",\n            onPress: () => this.performOperation(\"/\"),\n            children: \"\\xF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-multiply\",\n            onPress: () => this.performOperation(\"*\"),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-subtract\",\n            onPress: () => this.performOperation(\"-\"),\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-add\",\n            onPress: () => this.performOperation(\"+\"),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-equals\",\n            onPress: () => this.performOperation(\"=\"),\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 369,\n  columnNumber: 17\n}, this), document.getElementById(\"app\"));","map":{"version":3,"sources":["/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/admin/components/Calculator.js"],"names":["PointTarget","ReactPoint","AutoScalingText","React","Component","state","scale","componentDidUpdate","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","render","transform","props","children","CalculatorDisplay","value","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","CalculatorKey","onPress","className","CalculatorOperations","prevValue","nextValue","Calculator","displayValue","operator","waitingForOperand","handleKeyDown","event","key","preventDefault","inputDigit","parseInt","performOperation","inputDot","inputPercent","clearLastChar","clearDisplay","clearAll","substring","length","toggleSign","newValue","String","currentValue","fixedDigits","replace","toFixed","digit","nextOperator","inputValue","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","clearText","ReactDOM","getElementById"],"mappings":"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","sourcesContent":["const PointTarget = ReactPoint.PointTarget;\n\nclass AutoScalingText extends React.Component {\n  state = {\n    scale: 1\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n\n    const node = this.node;\n    const parentNode = node.parentNode;\n\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.setState({ scale: 1 });\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={(node) => (this.node = node)}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const { value, ...props } = this.props;\n\n    const language = navigator.language || \"en-US\";\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    });\n\n    // Add back missing .0 in e.g. 12.0\n    const match = value.match(/\\.\\d*?(0*)$/);\n\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n\n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nclass CalculatorKey extends React.Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    );\n  }\n}\n\nconst CalculatorOperations = {\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\n  \"=\": (prevValue, nextValue) => nextValue\n};\n\nclass Calculator extends React.Component {\n  state = {\n    value: null,\n    displayValue: \"0\",\n    operator: null,\n    waitingForOperand: false\n  };\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: \"0\"\n    });\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state;\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\"\n    });\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n\n    this.setState({\n      displayValue: String(newValue)\n    });\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state;\n    const currentValue = parseFloat(displayValue);\n\n    if (currentValue === 0) return;\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\n    const newValue = parseFloat(displayValue) / 100;\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    });\n  }\n\n  inputDot() {\n    const { displayValue } = this.state;\n\n    if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + \".\",\n        waitingForOperand: false\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const { displayValue, waitingForOperand } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      });\n    } else {\n      this.setState({\n        displayValue:\n          displayValue === \"0\" ? String(digit) : displayValue + digit\n      });\n    }\n  }\n\n  performOperation(nextOperator) {\n    const { value, displayValue, operator } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      });\n    } else if (operator) {\n      const currentValue = value || 0;\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\n\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    });\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (key === \"Enter\") key = \"=\";\n\n    if (/\\d/.test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10));\n    } else if (key in CalculatorOperations) {\n      event.preventDefault();\n      this.performOperation(key);\n    } else if (key === \".\") {\n      event.preventDefault();\n      this.inputDot();\n    } else if (key === \"%\") {\n      event.preventDefault();\n      this.inputPercent();\n    } else if (key === \"Backspace\") {\n      event.preventDefault();\n      this.clearLastChar();\n    } else if (key === \"Clear\") {\n      event.preventDefault();\n\n      if (this.state.displayValue !== \"0\") {\n        this.clearDisplay();\n      } else {\n        this.clearAll();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const { displayValue } = this.state;\n\n    const clearDisplay = displayValue !== \"0\";\n    const clearText = clearDisplay ? \"C\" : \"AC\";\n\n    return (\n      <div className=\"calculator\">\n        <CalculatorDisplay value={displayValue} />\n        <div className=\"calculator-keypad\">\n          <div className=\"input-keys\">\n            <div className=\"function-keys\">\n              <CalculatorKey\n                className=\"key-clear\"\n                onPress={() =>\n                  clearDisplay ? this.clearDisplay() : this.clearAll()\n                }\n              >\n                {clearText}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-sign\"\n                onPress={() => this.toggleSign()}\n              >\n                ±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-percent\"\n                onPress={() => this.inputPercent()}\n              >\n                %\n              </CalculatorKey>\n            </div>\n            <div className=\"digit-keys\">\n              <CalculatorKey\n                className=\"key-0\"\n                onPress={() => this.inputDigit(0)}\n              >\n                0\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-dot\"\n                onPress={() => this.inputDot()}\n              >\n                ●\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-1\"\n                onPress={() => this.inputDigit(1)}\n              >\n                1\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-2\"\n                onPress={() => this.inputDigit(2)}\n              >\n                2\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-3\"\n                onPress={() => this.inputDigit(3)}\n              >\n                3\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-4\"\n                onPress={() => this.inputDigit(4)}\n              >\n                4\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-5\"\n                onPress={() => this.inputDigit(5)}\n              >\n                5\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-6\"\n                onPress={() => this.inputDigit(6)}\n              >\n                6\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-7\"\n                onPress={() => this.inputDigit(7)}\n              >\n                7\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-8\"\n                onPress={() => this.inputDigit(8)}\n              >\n                8\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-9\"\n                onPress={() => this.inputDigit(9)}\n              >\n                9\n              </CalculatorKey>\n            </div>\n          </div>\n          <div className=\"operator-keys\">\n            <CalculatorKey\n              className=\"key-divide\"\n              onPress={() => this.performOperation(\"/\")}\n            >\n              ÷\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"key-multiply\"\n              onPress={() => this.performOperation(\"*\")}\n            >\n              ×\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"key-subtract\"\n              onPress={() => this.performOperation(\"-\")}\n            >\n              −\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"key-add\"\n              onPress={() => this.performOperation(\"+\")}\n            >\n              +\n            </CalculatorKey>\n            <CalculatorKey\n              className=\"key-equals\"\n              onPress={() => this.performOperation(\"=\")}\n            >\n              =\n            </CalculatorKey>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById(\"app\"));\n"]},"metadata":{},"sourceType":"module"}