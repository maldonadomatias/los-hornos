{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim().length === 0;\n\nconst isFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    table: true\n  });\n  const nameInputRef = useRef();\n  const tableInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredTable = tableInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredTableIsValid = !isEmpty(enteredTable);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      table: enteredTableIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredTableIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      table: enteredTable\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"N\\xFAmero de mesa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ref: tableInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"+P/4l/QlINWaHfIdCI6J1l9WwbE=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","length","isFiveChars","Checkout","props","formInputsValidity","setFormInputValidity","name","table","nameInputRef","tableInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredTable","enteredNameIsValid","enteredTableIsValid","formIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim().length === 0;\nconst isFiveChars = (value) => value.trim().length !== 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    table: true\n  });\n  const nameInputRef = useRef();\n  const tableInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredTable = tableInputRef.current.value;\n\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredTableIsValid = !isEmpty(enteredTable);\n\n\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      table: enteredTableIsValid\n    });\n\n    const formIsValid = enteredNameIsValid && enteredTableIsValid\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n        name: enteredName,\n        table: enteredTable\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`}>\n        <label htmlFor=\"name\">Nombre:</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`}>\n        <label>NÃºmero de mesa:</label>\n        <input type='number' ref={tableInputRef}/>\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}