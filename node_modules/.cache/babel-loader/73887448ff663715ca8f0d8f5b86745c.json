{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const loading = true;\n  const [color, setColor] = useState(\"#ffffff\");\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(props.api);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: color,\n        loading: loading,\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    const buttonBack = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: props.onGoBack,\n      children: \"Atr\\xE1s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.errorContainer,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.mealsLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), buttonBack]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onGoBack,\n        children: \"Atr\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"JIT2S4iti6S04tVEYkRnbHLLnm8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","ClipLoader","classes","MealItem","Card","AvailableMeals","props","meals","setMeals","isLoading","setIsLoading","error","setError","loading","color","setColor","fetchMeals","response","fetch","api","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","message","mealsLoading","buttonBack","button","onGoBack","errorContainer","mealsList","map","meal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem\";\nimport Card from \"../UI/Card\";\n\nconst AvailableMeals = (props) => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const loading = true;\n  const [color, setColor] = useState(\"#ffffff\");\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(props.api);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.mealsLoading}>\n        <ClipLoader color={color} loading={loading} size={150} />\n      </section>\n    );\n  }\n\n  if (error) {\n    const buttonBack = (\n      <button className={classes.button} onClick={props.onGoBack}>\n        Atrás\n      </button>\n    );\n    return (\n      <div className={classes.errorContainer}>\n        <Card className={classes.mealsLoading}>\n          <p>{error}</p>\n          {buttonBack}\n        </Card>\n      </div>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n        <button className={classes.button} onClick={props.onGoBack}>\n          Atrás\n        </button>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}