{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/admin/components/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { set, ref, remove } from \"firebase/database\";\nimport { db } from \"../../../db.js\";\nimport { uid } from 'uid';\nimport classes from \"./Orders.module.css\";\nimport CartContext from \"../../../store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = props => {\n  _s();\n\n  const [order, setOrder] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const cartCtx = useContext(CartContext);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const response = await fetch(\"https://menu-app-d307a-default-rtdb.firebaseio.com/orders.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedOrders = [];\n\n      for (const key in responseData) {\n        // console.log(responseData[key].orderedItems)\n        loadedOrders.push({\n          id: key,\n          orderedItems: responseData[key].orderedItems,\n          total: responseData[key].total,\n          user: responseData[key].user\n        });\n      }\n\n      setOrder(loadedOrders);\n      setIsLoading(false);\n      console.log(loadedOrders);\n    };\n\n    setInterval(() => {\n      fetchOrders();\n    }, 10000);\n    fetchOrders().catch(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  const writoToDatabase = () => {\n    const uuid = uid();\n    set(ref(db, `/${uuid}`), {\n      todo: todo,\n      uuid\n    });\n  };\n\n  const removeOrder = todo => {\n    remove(ref(db, `/${todo.uuid}`));\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: error\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = order.reverse().map(orders => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.order,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Cliente: \", orders.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.table,\n          children: [\"Mesa: \", orders.user.table]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orders.orderedItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.description,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.comida,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"$\", item.amount * item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.amount,\n              children: [\" x \", item.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.price,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: \", orders.total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeOrder(todo),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.orderContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"XVDVIlKeiSg4B3IWRKylZNYlOgA=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/admin/components/Orders.js"],"names":["React","useEffect","useState","useContext","Swal","set","ref","remove","db","uid","classes","CartContext","Orders","props","order","setOrder","isLoading","setIsLoading","error","setError","cartCtx","fetchOrders","response","fetch","ok","Error","responseData","json","loadedOrders","key","push","id","orderedItems","total","user","console","log","setInterval","catch","message","writoToDatabase","uuid","todo","removeOrder","mealsLoading","fire","icon","title","text","mealsList","reverse","map","orders","card","name","table","item","description","comida","amount","price","toFixed","orderContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,mBAAjC;AACA,SAAQC,EAAR,QAAiB,gBAAjB;AACA,SAAQC,GAAR,QAAkB,KAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMkB,OAAO,GAAGjB,UAAU,CAACQ,WAAD,CAA1B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,YAAY,GAAG,EAArB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9B;AACAE,QAAAA,YAAY,CAACE,IAAb,CAAkB;AAChBC,UAAAA,EAAE,EAAEF,GADY;AAEhBG,UAAAA,YAAY,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,YAFhB;AAGhBC,UAAAA,KAAK,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,KAHT;AAIhBC,UAAAA,IAAI,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJR,SAAlB;AAMD;;AACDnB,MAAAA,QAAQ,CAACa,YAAD,CAAR;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACD,KAzBD;;AA2BAS,IAAAA,WAAW,CAAC,MAAM;AAChBhB,MAAAA,WAAW;AACZ,KAFU,EAER,KAFQ,CAAX;AAIAA,IAAAA,WAAW,GAAGiB,KAAd,CAAqBpB,KAAD,IAAW;AAC7BD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACqB,OAAP,CAAR;AACD,KAHD;AAID,GApCQ,EAoCN,EApCM,CAAT;;AAsCA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,IAAI,GAAGhC,GAAG,EAAhB;AACAJ,IAAAA,GAAG,CAACC,GAAG,CAACE,EAAD,EAAM,IAAGiC,IAAK,EAAd,CAAJ,EAAsB;AACvBC,MAAAA,IAAI,EAAEA,IADiB;AAEvBD,MAAAA;AAFuB,KAAtB,CAAH;AAID,GAND;;AAQA,QAAME,WAAW,GAAID,IAAD,IAAU;AAC5BnC,IAAAA,MAAM,CAACD,GAAG,CAACE,EAAD,EAAM,IAAGkC,IAAI,CAACD,IAAK,EAAnB,CAAJ,CAAN;AACD,GAFD;;AAIA,MAAIzB,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACkC,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAI1B,KAAJ,EAAW;AACT,wBACE;AAAS,MAAA,SAAS,EAAER,OAAO,CAACkC,YAA5B;AAAA,6BACE;AAAA,kBACGxC,IAAI,CAACyC,IAAL,CAAU;AACTC,UAAAA,IAAI,EAAE,OADG;AAETC,UAAAA,KAAK,EAAE,SAFE;AAGTC,UAAAA,IAAI,EAAE9B;AAHG,SAAV;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,QAAM+B,SAAS,GAAGnC,KAAK,CAACoC,OAAN,GAAgBC,GAAhB,CAAqBC,MAAD,iBACpC;AAAI,IAAA,SAAS,EAAE1C,OAAO,CAACI,KAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAAC2C,IAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE3C,OAAO,CAACqC,KAAxB;AAAA,gCACE;AAAA,kCAAcK,MAAM,CAAClB,IAAP,CAAYoB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAE5C,OAAO,CAAC6C,KAAvB;AAAA,+BAAqCH,MAAM,CAAClB,IAAP,CAAYqB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBACGH,MAAM,CAACpB,YAAP,CAAoBmB,GAApB,CAAyBK,IAAD,iBACvB;AAAK,UAAA,SAAS,EAAE9C,OAAO,CAAC+C,WAAxB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAE/C,OAAO,CAACgD,MAAxB;AAAA,oCACE;AAAA,wBAAIF,IAAI,CAACF;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,8BAAKE,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACI,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,mCACE;AAAG,cAAA,SAAS,EAAElD,OAAO,CAACiD,MAAtB;AAAA,gCAAkCH,IAAI,CAACG,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF,eAkBE;AAAK,QAAA,SAAS,EAAEjD,OAAO,CAACkD,KAAxB;AAAA,gCACE;AAAA,gCAAWR,MAAM,CAACnB,KAAP,CAAa4B,OAAb,CAAqB,CAArB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMlB,WAAW,CAACD,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AA4BA,sBACE;AAAS,IAAA,SAAS,EAAEhC,OAAO,CAACoD,cAA5B;AAAA,2BACE;AAAA,gBAAMb;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhHD;;GAAMrC,M;;KAAAA,M;AAkHN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Swal from \"sweetalert2\";\n\nimport { set, ref, remove } from \"firebase/database\";\nimport {db} from \"../../../db.js\";\nimport {uid} from 'uid';\nimport classes from \"./Orders.module.css\";\nimport CartContext from \"../../../store/cart-context\";\n\nconst Orders = (props) => {\n  const [order, setOrder] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const cartCtx = useContext(CartContext);\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const response = await fetch(\n        \"https://menu-app-d307a-default-rtdb.firebaseio.com/orders.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n\n      const loadedOrders = [];\n\n      for (const key in responseData) {\n        // console.log(responseData[key].orderedItems)\n        loadedOrders.push({\n          id: key,\n          orderedItems: responseData[key].orderedItems,\n          total: responseData[key].total,\n          user: responseData[key].user,\n        });\n      }\n      setOrder(loadedOrders);\n      setIsLoading(false);\n      console.log(loadedOrders);\n    };\n\n    setInterval(() => {\n      fetchOrders();\n    }, 10000);\n\n    fetchOrders().catch((error) => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  const writoToDatabase = () => {\n    const uuid = uid();\n    set(ref(db, `/${uuid}`), {\n      todo: todo,\n      uuid\n    })\n  }\n\n  const removeOrder = (todo) => {\n    remove(ref(db, `/${todo.uuid}`))\n  }\n\n  if (isLoading) {\n    return (\n      <section className={classes.mealsLoading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  if (error) {\n    return (\n      <section className={classes.mealsLoading}>\n        <p>\n          {Swal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: error,\n          })}\n        </p>\n      </section>\n    );\n  }\n\n  const mealsList = order.reverse().map((orders) => (\n    <li className={classes.order}>\n      <div className={classes.card}>\n        <div className={classes.title}>\n          <h3>Cliente: {orders.user.name}</h3>\n          <h2 className={classes.table}>Mesa: {orders.user.table}</h2>\n        </div>\n        <div>\n          {orders.orderedItems.map((item) => (\n            <div className={classes.description}>\n              <div className={classes.comida}>\n                <p>{item.name}</p>\n                <p>${item.amount * item.price}</p>\n              </div>\n              <div>\n                <p className={classes.amount}> x {item.amount}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={classes.price}>\n          <p>Total: {orders.total.toFixed(2)}</p>\n          <button onClick={() => removeOrder(todo)}>Eliminar</button>\n        </div>\n      </div>\n    </li>\n  ));\n\n  return (\n    <section className={classes.orderContainer}>\n      <div>{mealsList}</div>\n    </section>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}