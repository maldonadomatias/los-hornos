{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim().length === 0;\n\nconst isFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = !isFiveChars(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredStreetIsValid && enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"N\\xFAmero de mesa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"UhPnvQ4uOFCpaaMwmyps3W7XfyU=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","length","isFiveChars","Checkout","props","formInputsValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim().length === 0;\nconst isFiveChars = (value) => value.trim().length !== 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = !isFiveChars(enteredPostal);\n\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredCityIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n        name: enteredName,\n        street: enteredStreet,\n        city: enteredCity,\n        postalCode: enteredPostal\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`}>\n        <label htmlFor=\"name\">Nombre:</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`}>\n        <label>NÃºmero de mesa:</label>\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}