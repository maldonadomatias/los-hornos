{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/admin/components/Calculator/main/Calculator.jsx\";\nimport React, { Component, useState } from 'react';\nimport './Calculator.css';\nimport Button from '../components/Button';\nimport Display from '../components/Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\nexport default class Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initalState\n    };\n    this.clearMemory = this.clearMemory.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.addDigit = this.addDigit.bind(this);\n  }\n\n  clearMemory() {\n    this.setState({ ...initalState\n    });\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === '=';\n      const currentOperatio = this.state.operation;\n      const values = [...this.state.values];\n\n      try {\n        values[0] = eval(`${values[0]} ${currentOperatio[0]} ${values[1]}`);\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n\n      values[1] = 0;\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      });\n    }\n  }\n\n  addDigit(n) {\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    }\n\n    const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({\n      displayValue,\n      clearDisplay: false\n    });\n\n    if (n != '.') {\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({\n        values\n      });\n      console.log(values);\n    }\n  }\n\n  render() {\n    const [unlocked, setUnlocked] = useState(false);\n    if (this.state.displayValue == '') return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: this.state.displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: 'AC',\n        click: this.clearMemory,\n        triple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '/',\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '7',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '8',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '9',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '*',\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '4',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '5',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '6',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '-',\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '1',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '2',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '3',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '+',\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '0',\n        click: this.addDigit,\n        double: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '.',\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: '=',\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/matiasmaldonado/Desktop/React/React-myProjects/los-hornos/src/components/admin/components/Calculator/main/Calculator.jsx"],"names":["React","Component","useState","Button","Display","initalState","displayValue","clearDisplay","operation","values","current","Calculator","constructor","props","state","clearMemory","bind","setOperation","addDigit","setState","equals","currentOperatio","eval","e","n","includes","currentValue","i","newValue","parseFloat","console","log","render","unlocked","setUnlocked"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport './Calculator.css';\nimport Button from '../components/Button';\nimport Display from '../components/Display';\n\nconst initalState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\n\n\nexport default class Calculator extends Component {\n  state = { ...initalState };\n  constructor(props) {\n    super(props);\n    this.clearMemory = this.clearMemory.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.addDigit = this.addDigit.bind(this);\n  }\n\n  clearMemory() {\n    this.setState({ ...initalState });\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({ operation, current: 1, clearDisplay: true });\n    } else {\n      const equals = operation === '=';\n      const currentOperatio = this.state.operation;\n      const values = [...this.state.values];\n\n      try {\n        values[0] = eval(`${values[0]} ${currentOperatio[0]} ${values[1]}`);\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n\n      values[1] = 0;\n\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      });\n    }\n  }\n\n  addDigit(n) {\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    }\n\n    const clearDisplay =\n      this.state.displayValue === '0' || this.state.clearDisplay;\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({ displayValue, clearDisplay: false });\n\n    if (n != '.') {\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({ values });\n\n      console.log(values);\n    }\n  }\n  \n\n  render() {\n    const [unlocked, setUnlocked] = useState(false);\n\n    if(this.state.displayValue == '')\n\n\n    return (\n      <div className=\"calculator\">\n        <Display value={this.state.displayValue} />\n        <Button label={'AC'} click={this.clearMemory} triple />\n        <Button label={'/'} click={this.setOperation} operation />\n        <Button label={'7'} click={this.addDigit} />\n        <Button label={'8'} click={this.addDigit} />\n        <Button label={'9'} click={this.addDigit} />\n        <Button label={'*'} click={this.setOperation} operation />\n        <Button label={'4'} click={this.addDigit} />\n        <Button label={'5'} click={this.addDigit} />\n        <Button label={'6'} click={this.addDigit} />\n        <Button label={'-'} click={this.setOperation} operation />\n        <Button label={'1'} click={this.addDigit} />\n        <Button label={'2'} click={this.addDigit} />\n        <Button label={'3'} click={this.addDigit} />\n        <Button label={'+'} click={this.setOperation} operation />\n        <Button label={'0'} click={this.addDigit} double />\n        <Button label={'.'} click={this.addDigit} />\n        <Button label={'='} click={this.setOperation} operation />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}